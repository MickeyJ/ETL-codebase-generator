from fastapi import APIRouter, Depends, Query, HTTPException
from sqlalchemy.orm import Session
from sqlalchemy import select, func, or_, text
from typing import Optional
from {{ project_name }}.src.db.database import get_db
from .. import current_version_prefix
from {{ project_name }}.src.db.models import {{ router.model }}

router = APIRouter(
    prefix="/{{ router.name }}",
    tags=["{{ router.name }}"],
    responses={404: {"description": "Not found"}},
)

@router.get("/{{ router.name}}")
def get_{{ router.name}}(db: Session = Depends(get_db)):

    query = (
        select({{ router.model }})
    )

    results = db.execute(query).mappings().all()

    return {"{{ router.name}}": [dict(item) for item in results]}

